@page "/Profesiones/create"
@inject HttpClient httpClient
@inject IHttpService http
@inject NavigationManager navigationManager
@using MudBlazor

<h3>Crear Profesión</h3>

<EditForm Model="@entity" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudSelect Label="Select Profesional" @bind-Value="entity.PersonaId" HelperText="Seleccione un profesional">
                        @if (!flagTdoc)
                        {
                            <MudSelectItem Value="-1">@MsgData</MudSelectItem>
                        }
                        else
                        {
                            @foreach (var per in ListPersonas)
                            {
                                <MudSelectItem Value="@per.Id">@per.Nombre</MudSelectItem>
                            }
                        }
                    </MudSelect>

                    @if (!string.IsNullOrEmpty(SelectedPersona))
                    {
                        <p>Your selection: @SelectedPersona</p>
                    }

                    <MudSelect Label="Select Título" @bind-Value="entity.TituloId" HelperText="Seleccione un título">
                        @if (!flagTdoc)
                        {
                            <MudSelectItem Value="-1">@MsgData</MudSelectItem>
                        }
                        else
                        {
                            @foreach (var titulo in ListTitulos)
                            {
                                <MudSelectItem Value="@titulo.Id">@titulo.Nombre</MudSelectItem>
                            }
                        }
                    </MudSelect>

                    @if (!string.IsNullOrEmpty(SelectedTitulo))
                    {
                        <p>Your selection: @SelectedTitulo</p>
                    }
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Cancelar">Cancel</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validations</MudText>
                @if (success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Error info:
                @msg
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private Profesion entity = new Profesion();
    bool success;
    string msg = "";
    bool flag;
    public string MsgData = "";
    bool flagTdoc = true;
    string SelectedTitulo = "";
    string SelectedPersona = "";
    List<Persona> ListPersonas = new List<Persona>();
    List<Titulo> ListTitulos = new List<Titulo>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await GetData();
    }

    private async Task Grabar()
    {
        var resp = await http.Get<List<Profesion>>("api/Profesiones");
        var list = resp.Response;

        var httpresponse = await http.Post<Profesion>("api/Profesiones", entity);
        if (httpresponse.Error)
        {
            var body = httpresponse.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/Profesiones");
    }

    private async Task GetData()
    {
        var respPersona = await http.Get<List<Persona>>("api/Personas");
        var respTitulo = await http.Get<List<Titulo>>("api/Titulos");
        if (!respPersona.Error && !respTitulo.Error)
        {
            ListPersonas = respPersona.Response;
            ListTitulos = respTitulo.Response;
        }
        else
        {
            MsgData = "Revise si cargo profesionales y títulos";
            flagTdoc = false;
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/Profesiones");
    }
}
